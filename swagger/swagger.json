{
  "openapi": "3.0.0",
  "info": {
    "title": "< Multi-Seller-Shop >",
    "description": "",
    "version": "1.0.0"
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "User token for authentication: **Bearer [user_token]**"
      }
    }
  },

  "paths": {
    "/api/v1/auth/send": {
      "post": {
        "tags": ["Auth 🔐"],
        "summary": "Send OTP to validate phone number - Default OTP: 1111",
        "description": "Default OTP: 1111",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "09123334444"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent"
          },
          "400": {
            "description": "phone number is not valid"
          }
        }
      }
    },
    "/api/v1/auth/verify": {
      "post": {
        "tags": ["Auth 🔐"],
        "summary": "verify the phone number and login/register",
        "description": "",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "09123334444"
                  },
                  "otp": {
                    "type": "string",
                    "example": "1111"
                  },
                  "isSeller": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user logged in successfully"
          },
          "201": {
            "description": "user registered successfully"
          },
          "400": {
            "description": "Invalid OTP / Invalid body data"
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": ["Auth 🔐"],
        "summary": "Get user's data with token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "user data will be returned"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/category/": {
      "get": {
        "tags": ["Category 📁"],
        "summary": "Get all categories",
        "description": "",
        "responses": {
          "200": {
            "description": "All categories will be returned"
          }
        }
      },
      "post": {
        "tags": ["Category 📁"],
        "summary": "Create a new category",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "Title Text"
                  },
                  "slug": {
                    "example": "title-slug-text"
                  },
                  "parent": {
                    "example": "parentCategoryId"
                  },
                  "description": {
                    "example": "Description about category"
                  },
                  "icon": {
                    "type": "string",
                    "format": "binary",
                    "description": "Select image files to upload"
                  },
                  "filters": {
                    "type": "object",
                    "example": [
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug3",
                        "type": "radio",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      },
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug4",
                        "type": "selectbox",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category created"
          },
          "400": {
            "description": "one of the parameters is not valid"
          },
          "401": {
            "description": "Admin Token is not valid"
          }
        }
      }
    },
    "/api/v1/category/{categoryId}": {
      "put": {
        "tags": ["Category 📁"],
        "summary": "Edit a category",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "Title Text"
                  },
                  "slug": {
                    "example": "title-slug-text"
                  },
                  "parent": {
                    "example": "parentCategoryId"
                  },
                  "description": {
                    "example": "Description about category"
                  },
                  "icon": {
                    "type": "string",
                    "format": "binary",
                    "description": "Select image files to upload"
                  },
                  "filters": {
                    "type": "object",
                    "example": [
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug3",
                        "type": "radio",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      },
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug4",
                        "type": "selectbox",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edited successfully"
          },
          "400": {
            "description": "one of the parameters is not valid"
          },
          "401": {
            "description": "Admin Token is not valid"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": ["Category 📁"],
        "summary": "Remove a category",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "401": {
            "description": "Admin Token is not valid"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/api/v1/category/sub": {
      "get": {
        "tags": ["Sub Category 📂"],
        "summary": "Get all sub categories",
        "description": "",
        "responses": {
          "200": {
            "description": "All sub categories will be returned"
          }
        }
      },
      "post": {
        "tags": ["Sub Category 📂"],
        "summary": "Create a sub category",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "Title Text"
                  },
                  "slug": {
                    "example": "title-slug-text"
                  },
                  "parent": {
                    "example": "parentCategoryId"
                  },
                  "description": {
                    "example": "Description about category"
                  },
                  "filters": {
                    "type": "object",
                    "example": [
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug3",
                        "type": "radio",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      },
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug4",
                        "type": "selectbox",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SubCategory created"
          },
          "400": {
            "description": "one of the parameters is not valid"
          },
          "401": {
            "description": "Admin Token is not valid"
          }
        }
      }
    },
    "/api/v1/category/sub/{categoryId}": {
      "get": {
        "tags": ["Sub Category 📂"],
        "summary": "Get a sub category",
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SubCategory will be returned"
          },
          "404": {
            "description": "SubCategory not found"
          }
        }
      },
      "put": {
        "tags": ["Sub Category 📂"],
        "summary": "Edit a sub category",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "Title Text"
                  },
                  "slug": {
                    "example": "title-slug-text"
                  },
                  "parent": {
                    "example": "parentCategoryId"
                  },
                  "description": {
                    "example": "Description about category"
                  },
                  "filters": {
                    "type": "object",
                    "example": [
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug3",
                        "type": "radio",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      },
                      {
                        "name": "وضعیت کالا",
                        "description": "فیلد دراپ داون تست",
                        "slug": "test_slug4",
                        "type": "selectbox",
                        "options": ["نو", "کهنه", "تعمیری"],
                        "required": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edited successfully"
          },
          "400": {
            "description": "one of the parameters is not valid"
          },
          "401": {
            "description": "Admin Token is not valid"
          },
          "404": {
            "description": "SubCategory not found"
          }
        }
      },
      "delete": {
        "tags": ["Sub Category 📂"],
        "summary": "Remove a sub category",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "401": {
            "description": "Admin Token is not valid"
          },
          "404": {
            "description": "SubCategory not found"
          }
        }
      }
    },
    "/api/v1/comments/": {
      "post": {
        "tags": ["Comments ✍🏻"],
        "summary": "Add comment to product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created comment will be returned"
          }
        }
      },
      "get": {
        "tags": ["Comments ✍🏻"],
        "summary": "Get product comments",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product comments and replies will be returned"
          }
        }
      }
    },
    "/api/v1/comments/{commentId}": {
      "patch": {
        "tags": ["Comments ✍🏻"],
        "summary": "Update comment rating or content",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated coment will be returned"
          }
        }
      },
      "delete": {
        "tags": ["Comments ✍🏻"],
        "summary": "delete comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted comment will be returned"
          }
        }
      }
    },
    "/api/v1/comments/{commentId}/reply": {
      "post": {
        "tags": ["Comments ✍🏻"],
        "summary": "reply to a comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "created reply will be returned"
          }
        }
      }
    },
    "/api/v1/comments/{commentId}/reply/{replyId}": {
      "patch": {
        "tags": ["Comments ✍🏻"],
        "summary": "edit reply",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated reply will return"
          }
        }
      },
      "delete": {
        "tags": ["Comments ✍🏻"],
        "summary": "delete reply",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted reply will be returned"
          }
        }
      }
    },
    "/api/v1/comments/all": {
      "get": {
        "tags": ["Comments ✍🏻"],
        "summary": "Get Get all comments for admin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of all comments from every user on every product"
          }
        }
      }
    },
    "/api/v1/users/me/addresses": {
      "post": {
        "tags": ["Users 👤"],
        "summary": "add address",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "coordinates": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      }
                    }
                  },
                  "cityId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "updated user containing addresses will be returned"
          }
        }
      }
    },
    "/api/v1/users/me/addresses/{addressId}": {
      "patch": {
        "tags": ["Users 👤"],
        "summary": "update address",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "coordinates": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      }
                    }
                  },
                  "cityId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "updated user containing addresses will be returned"
          }
        }
      },
      "delete": {
        "tags": ["Users 👤"],
        "summary": "delete address",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated user with addresses will be returned"
          }
        }
      }
    },
    "/api/v1/location/": {
      "get": {
        "tags": ["Location 🗺"],
        "summary": "Get all locations",
        "description": "",
        "responses": {
          "200": {
            "description": "cities, provinces, and neighborhoods will be returned"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["Dashboard 📈"],
        "summary": "Get all users",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users will be sent"
          },
          "401": {
            "description": "Admin Token is not valid"
          }
        }
      }
    },
    "/api/v1/users/ban/{userId}": {
      "post": {
        "tags": ["Dashboard 📈"],
        "summary": "Ban user and remove his/her account and posts",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User banned successfully"
          },
          "401": {
            "description": "Admin Token is not valid"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/cart": {
      "get": {
        "tags": ["Cart 🛒"],
        "summary": "Get user's cart with product information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "cart items with quantity and price will be returned"
          }
        }
      }
    },
    "/api/v1/cart/add": {
      "post": {
        "tags": ["Cart 🛒"],
        "summary": "add product to cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "sellerId": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cart with added item will be returned"
          }
        }
      }
    },
    "/api/v1/cart/remove": {
      "post": {
        "tags": ["Cart 🛒"],
        "summary": "remove product from cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "sellerId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cart with added item will be returned"
          }
        }
      }
    },
    "/api/v1/sellers": {
      "post": {
        "tags": ["Sellers 💸"],
        "summary": "add seller shop information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "contactDetails": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string"
                      }
                    }
                  },
                  "cityId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "seller information will be returned"
          }
        }
      },
      "patch": {
        "tags": ["Sellers 💸"],
        "summary": "update seller shop information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "contactDetails": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string"
                      }
                    }
                  },
                  "cityId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated seller information will be returned"
          }
        }
      },
      "delete": {
        "tags": ["Sellers 💸"],
        "summary": "delete seller shop information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "deleted seller information will be returned"
          }
        }
      },
      "get": {
        "tags": ["Sellers 💸"],
        "summary": "get seller shop information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "seller information will be returned"
          }
        }
      }
    },
    "/api/v1/seller-requests": {
      "post": {
        "tags": ["Seller Requests 🛍️"],
        "summary": "request to be seller of a product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string"
                  },
                  "stock": {
                    "type": "number"
                  },
                  "price": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "submitted seller request will be returned"
          }
        }
      },
      "get": {
        "tags": ["Seller Requests 🛍️"],
        "summary": "get requests",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["approved", "pending", "rejected"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of requests with their status will be returned"
          }
        }
      }
    },
    "/api/v1/seller-requests/{id}": {
      "patch": {
        "tags": ["Seller Requests 🛍️"],
        "summary": "request to be seller of a product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["approve", "reject"]
                  },
                  "adminComments": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated seller request will be returned"
          }
        }
      },
      "delete": {
        "tags": ["Seller Requests 🛍️"],
        "summary": "delete request to be seller of a product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted request will be returned"
          }
        }
      }
    },
    "/api/v1/products": {
      "post": {
        "tags": ["Products 📦"],
        "summary": "create new product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "subCategory": {
                    "type": "string"
                  },
                  "sellers": {
                    "type": "string",
                    "example": "[{\"id\":\"66ed0d8fb643bed97cae4c29\",\"price\":\"7000000\",\"stock\":150}]"
                  },
                  "filterValues": {
                    "type": "string",
                    "example": "{\"ram\":\"8GB\"}"
                  },
                  "customFields": {
                    "type": "string",
                    "example": "{\"sensors\": \"Fingerprint, Infra Red\"}"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created product will be returned"
          }
        }
      },
      "get": {
        "tags": ["Products 📦"],
        "summary": "get list of products",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subCategory",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sellerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterValues",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "{\"ram\": \"8GB\"}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of products will be returned with their rating"
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": ["Products 📦"],
        "summary": "get one product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "specfied product will be returned"
          }
        }
      },
      "patch": {
        "tags": ["Products 📦"],
        "summary": "update product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "subCategory": {
                    "type": "string"
                  },
                  "sellers": {
                    "type": "string",
                    "example": "[{\"id\":\"66ed0d8fb643bed97cae4c29\",\"price\":\"7000000\",\"stock\":150}]"
                  },
                  "filterValues": {
                    "type": "string",
                    "example": "{\"ram\":\"8GB\"}"
                  },
                  "customFields": {
                    "type": "string",
                    "example": "{\"sensors\": \"Fingerprint, Infra Red\"}"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated product will be returned"
          }
        }
      },
      "delete": {
        "tags": ["Products 📦"],
        "summary": "delete product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted product will be returned"
          }
        }
      }
    },
    "/api/v1/checkout/": {
      "post": {
        "tags": ["Checkout 🚚"],
        "summary": "create checkout for items in cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shippingAddress": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "coordinates": {
                        "type": "object",
                        "properties": {
                          "lat": {
                            "type": "number"
                          },
                          "lng": {
                            "type": "number"
                          }
                        }
                      },
                      "cityId": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created checkout + payment url will be"
          }
        }
      }
    },
    "/api/v1/checkout/verify": {
      "get": {
        "tags": ["Checkout 🚚"],
        "summary": "Verify payment",
        "parameters": [
          {
            "name": "Authority",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "created order will be returned"
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": ["Orders ✅"],
        "summary": "Get all orders",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "list of orders will be returned"
          }
        }
      }
    },
    "/api/v1/orders/{id}": {
      "patch": {
        "tags": ["Orders ✅"],
        "summary": "Update order status",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["PROCESSING", "SHIPPED", "DELIVERED"]
                  },
                  "postTrackingCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated order will be returned"
          }
        }
      }
    }
  }
}
